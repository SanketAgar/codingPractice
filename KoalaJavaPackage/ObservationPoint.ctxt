#BlueJ class context
comment0.target=ObservationPoint
comment0.text=\n\ An\ observation\ point\ creates\ and\ maintains\ a\ set\ of\ trees\ and\ Koalas\ inside\ it.\n\ The\ observation\ point\ also\ manages\ and\ maintains\ any\ changes\ on\ the\ trees\ and\ Koalas\ inside\ the\n\ observation\ point.\n\ @author\ (Sanket\ Agarwal)\n\ @studentID\ (31224482)\n\ @version\ (12/06/2020)\n
comment1.params=
comment1.target=ObservationPoint()
comment1.text=\n\ ObservationPoint\ Constructor\n\ The\ default\ constructor\ updates\ initialises\ the\ values\ of\ the\ class.\n
comment10.params=healthyKoalasValue
comment10.target=void\ setHealthyKoalasAtObservationPoint(int)
comment10.text=\n\ Method\ setHealthyKoalasAtObservationPoint\n\ Takes\ an\ input\ value\ and\ creates\ healthy\ koalas\ at\ the\ observation\ point\ based\ on\ these\ values.\n\ @param\ healthyKoalasValue\ A\ parameter\ of\ how\ many\ healthy\ koalas\ will\ be\ in\ the\ observation\ point.\ Randomly\ generated.\n
comment11.params=injuredKoalasValue
comment11.target=void\ setInjuredKoalasAtObservationPoint(int)
comment11.text=\n\ \ \ \ Method\ setInjuredKoalasAtObservationPoint\n\ Takes\ an\ input\ value\ and\ creates\ inured\ koalas\ at\ the\ observation\ point\ based\ on\ these\ values.\n\ @param\ injuredKoalasValue\ A\ parameter\ of\ how\ many\ injured\ koalas\ will\ be\ in\ the\ observation\ point.\ Randomly\ generated.\n
comment12.params=predatorsValue
comment12.target=void\ setNumberOfPredators(int)
comment12.text=\n\ Method\ setNumberOfPredators\n\ Sets\ a\ number\ of\ predators\ at\ the\ observation\ point\ based\ on\ the\ parameter\ value.\n\ @param\ predatorsValue\ A\ parameter\ that\ defines\ the\ number\ of\ predators\ in\ the\ observation\ point.\n
comment13.params=trees
comment13.target=void\ setTreesAtObservationPoint(int[])
comment13.text=\n\ Method\ setTreesAtObservationPoint\n\ Created\ a\ number\ of\ trees\ at\ the\ observation\ point\ of\ all\ types\ based\ on\ an\ input\ parameter.\n\ @param\ trees\ A\ parameter\ which\ is\ an\ int\ array\ with\ 5\ numbers,\ each\ index\ being\ a\ type\ of\ tree\ and\ the\ value\ being\ the\ number\n\ of\ trees.\n
comment14.params=koalaToAdd
comment14.target=void\ addKoala(Koala)
comment14.text=\n\ Method\ addKoala\n\ A\ method\ that\ adds\ a\ specific\ koala\ to\ the\ Observation\ point,\ the\ specific\ Koala\ is\ recieved\ from\ the\ parameter.\n\ @param\ koalaToAdd\ A\ parameter\ that\ is\ a\ specific\ koala\ object.\n
comment15.params=
comment15.target=Koala\ removeInjuredKoala()
comment15.text=\n\ Method\ removeInjuredKoala\n\ Removes\ an\ injured\ koala\ from\ the\ observation\ point\ and\ returns\ the\ Koala\ object.\n\ @return\ The\ return\ value\ is\ the\ Koala\ that\ was\ removed\ from\ the\ observation\ point.\n
comment16.params=
comment16.target=Koala\ removeHealthyKoala()
comment16.text=\n\ Method\ removeHealthyKoala\n\ Removes\ an\ healthy\ koala\ from\ the\ observation\ point\ and\ returns\ the\ Koala\ object.\n\ @return\ The\ return\ value\ is\ a\ is\ the\ Koala\ that\ was\ removed\ from\ the\ observation\ point.\n
comment17.params=
comment17.target=boolean\ isObservationPointSafe()
comment17.text=\n\ Method\ isObservationPointSafe\n\ The\ method\ checks\ to\ see\ if\ an\ observation\ point\ is\ safe\ or\ not\ based\ on\ the\ number\ of\ predators,\ total\ amount\ of\ food\ \n\ and\ total\ number\ of\ shelter\ trees.\n\ @return\ The\ return\ value\ of\ true\ or\ false\ based\ on\ if\ the\ observation\ point\ is\ safe\ or\ not.\n
comment18.params=
comment18.target=int\ killInjuredKoalas()
comment18.text=\n\ Method\ killInjuredKoalas\n\ The\ method\ kills\ all\ the\ injured\ koalas\ remaining\ at\ the\ observation\ point\ by\ looping\ through\ all\ the\ koalas\ and\ checking\ if\ the\ are\n\ injured\ or\ not.\n\ @return\ The\ return\ value\ is\ an\ int\ number\ of\ how\ many\ koalas\ were\ killed.\n
comment19.params=
comment19.target=void\ killKoala()
comment19.text=\n\ Method\ killKoala\n\ The\ method\ kills\ the\ first\ koala\ in\ the\ list.\n
comment2.params=trees\ healthyKoalasValue\ injuredKoalasValue\ numberOfPredators
comment2.target=ObservationPoint(int[],\ int,\ int,\ int)
comment2.text=\n\ ObservationPoint\ Constructor\n\ The\ parameterised\ constructor\ takes\ input\ for\ the\ requied\ fields\ and\ calls\ set\ functions\ to\ set\ the\ data\ of\ the\ fields.\n\ @param\ trees\ A\ parameter\ which\ is\ an\ int\ array\ which\ specifies\ the\ number\ of\ each\ type\ of\ tree\ in\ the\ observation\ point.\n\ @param\ healthyKoalasValue\ A\ parameter\ that\ is\ an\ int\ value\ of\ how\ many\ healthy\ koalas\ are\ in\ the\ observation\ point.\ Randomly\ generated.\n\ @param\ injuredKoalasValue\ A\ parameter\ that\ is\ an\ int\ value\ of\ how\ many\ injured\ koalas\ are\ in\ the\ observation\ point.\ Randomly\ generated.\n\ @param\ numberOfPredators\ A\ parameter\ that\ is\ an\ int\ value\ of\ how\ many\ predators\ are\ there\ in\ the\ observation\ point.\ Randomly\ generated.\n
comment20.params=iteratorOfTree
comment20.target=void\ removeTreeAtObservationPoint(int)
comment20.text=\n\ Method\ removeTreeAtObservationPoint\n\ The\ method\ removes\ a\ specific\ tree\ from\ the\ observation\ point.\n\ @param\ iteratorOfTree\ A\ parameter\ of\ the\ position\ of\ the\ tree\ in\ the\ ArrayList.\n
comment3.params=
comment3.target=java.util.ArrayList\ getHealthyKoala()
comment3.text=\n\ Method\ getHealthyKoala\n\ The\ method\ returns\ an\ array\ list\ of\ all\ the\ injured\ koalas\ in\ the\ observation\ point\ by\ looping\ through\ all\ the\ koalas\ and\ checking\ if\ they\ \n\ are\ injured\ or\ not\ and\ creating\ a\ new\ list\ of\ all\ the\ healthy\ koalas.\n\ @return\ The\ return\ value\ is\ an\ array\ list\ of\ all\ healthy\ koalas.\n
comment4.params=
comment4.target=java.util.ArrayList\ getInjuredKoala()
comment4.text=\n\ Method\ getInjuredKoala\n\ The\ method\ returns\ an\ array\ list\ of\ all\ the\ injured\ koalas\ in\ the\ observation\ point\ by\ looping\ through\ all\ the\ koalas\ and\ checking\ if\ they\ \n\ are\ injured\ or\ not\ and\ creating\ a\ new\ list\ of\ all\ the\ injured\ koalas.\n\ @return\ The\ return\ value\ is\ an\ array\ list\ of\ all\ injured\ koalas.\n
comment5.params=
comment5.target=java.util.ArrayList\ getKoalas()
comment5.text=\n\ Method\ getKoalas\n\ The\ method\ returns\ an\ array\ list\ of\ all\ the\ koalas\ in\ the\ observation\ point\ which\ is\ a\ field\ of\ the\ class.\n\ @return\ The\ return\ value\ \ is\ an\ array\ list\ of\ all\ koalas.\n
comment6.params=
comment6.target=int\ getNumberOfPredators()
comment6.text=\n\ Method\ getNumberOfPredators\n\ The\ method\ returns\ an\ int\ value\ of\ the\ number\ of\ predators\ at\ the\ observation\ point\ which\ is\ a\ field\ of\ the\ class.\n\ @return\ The\ return\ value\ is\ an\ int\ value\ of\ the\ number\ of\ predators.\n
comment7.params=
comment7.target=double\ getTotalAmountOfFood()
comment7.text=\n\ Method\ getTotalAmountOfFood\n\ The\ method\ returns\ a\ double\ value\ of\ the\ weight\ of\ food\ generated\ by\ the\ trees\ everday\ by\ looping\ through\ every\ tree\ and\ adding\ the\ weight\ produced\ by\ it..\n\ @return\ The\ return\ value\ is\ a\ double\ which\ is\ a\ sum\ of\ all\ the\ food\ produced\ by\ the\ trees.\n
comment8.params=
comment8.target=int\ getTotalNumberOfShelter()
comment8.text=\n\ Method\ getTotalNumberOfShelter\n\ Returns\ the\ total\ number\ of\ shelter\ trees\ at\ the\ observation\ point\ by\ looping\ through\ every\ tree\ and\ checking\ if\ they\ are\ shelter.\n\ @return\ The\ return\ value\ is\ an\ int\ of\ the\ number\ of\ shelter\ trees\ at\ the\ observation\ point.\n
comment9.params=
comment9.target=java.util.ArrayList\ getTreesAtObservationPoint()
comment9.text=\n\ Method\ getTreesAtObservationPoint\n\ The\ method\ returns\ an\ ArrayList\ of\ all\ the\ trees\ in\ the\ observation\ point,\ this\ is\ also\ a\ field\ in\ the\ class.\n\ @return\ The\ return\ value\ is\ an\ ArrayList\ of\ all\ the\ trees.\n
numComments=21
